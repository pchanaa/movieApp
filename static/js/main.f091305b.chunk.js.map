{"version":3,"sources":["routes/About.js","components/moive.js","routes/home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","className","Movie","props","len","Object","keys","genres","length","newGenre","i","console","log","push","to","pathname","id","state","year","title","summary","poster","img","src","alt","slice","Home","isLoading","movies","number","print","genre","getApi","a","axios","get","mov","data","setState","this","setTimeout","map","movie","medium_cover_image","key","React","Component","Detail","location","history","undefined","Navi","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAUeA,G,MARH,WACR,OACQ,yBAAKC,UAAU,cACX,yBAAKA,UAAU,SAAf,0B,uECgDDC,EAjDD,SAACC,GACb,IAAIC,EAAMC,OAAOC,KAAKH,EAAMI,QAAQC,OAChCC,EAAW,GAYf,OAXC,WACC,IAAI,IAAIC,EAAI,EAAEA,EAAEN,EAAIM,IAClBC,QAAQC,IAAIT,EAAMI,OAAOG,IACtBA,IAAIN,EAAI,EACTK,EAASI,KAAKV,EAAMI,OAAOG,GAAG,MAEhCD,EAASI,KAAKV,EAAMI,OAAOG,IAN9B,GAYC,kBAAC,IAAD,CAAMI,GAAK,CACTC,SAAS,iBAAD,OAAkBZ,EAAMa,IAChCC,MAAM,CACJC,KAAOf,EAAMe,KACbC,MAAQhB,EAAMgB,MACdC,QAAUjB,EAAMiB,QAChBC,OAASlB,EAAMmB,IACff,OAAOJ,EAAMI,UAIX,yBAAKN,UAAW,aACd,yBAAKsB,IAAOpB,EAAMmB,IAAKE,IAAOrB,EAAMgB,MAAOA,MAAOhB,EAAMgB,QAC1D,yBAAKlB,UAAY,YACf,wBAAIA,UAAY,aAAaE,EAAMgB,OACnC,wBAAIlB,UAAY,YAAYE,EAAMe,MAClC,yBAAKjB,UAAY,kBACb,wBAAIA,UAAW,UAAf,WAAiCQ,IAErC,uBAAGR,UAAY,eAAeE,EAAMiB,QAAQK,MAAM,EAAE,KAApD,WCyCGC,G,kNAzEbT,MAAQ,CACNU,WAAW,EACXC,OAAQ,GACRC,OAAQ,G,EAGZC,MAAM,WACJnB,QAAQC,IAAI,EAAKmB,Q,EAEjBC,O,sBAAS,8BAAAC,EAAA,sEAKuBC,IAAMC,IAClC,oEANK,gBAGaC,EAHb,EAELC,KACEA,KAAQT,OAKVjB,QAAQC,IAAIwB,GACd,EAAKE,UAAS,SAACrB,GACb,MAAO,CAAEW,OAAQQ,EAAKT,WAAW,MAV5B,2C,kEAeY,IAAD,OACVA,EAAcY,KAAKtB,MAAnBU,UACHA,GACJa,YAAW,WAKR,EAAKF,SAAS,CAAEX,WAAYA,MAC3B,KACPY,KAAKP,W,+BAIK,IAAD,EACsBO,KAAKtB,MAA1BU,EADD,EACCA,UAAWC,EADZ,EACYA,OAGnB,OAFAjB,QAAQC,IAAIgB,GAGR,6BAAS3B,UAAU,aAClB0B,EACI,yBAAK1B,UAAU,UACd,0BAAMA,UAAU,YAAhB,eAGJ,yBAAKA,UAAW,UACX2B,EAAOa,KAAI,SAACC,GACX,OACE,kBAAC,EAAD,CACE1B,GAAI0B,EAAM1B,GACVE,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfE,IAAKoB,EAAMC,mBACXpC,OAAQmC,EAAMnC,OACdqC,IAAKF,EAAM1B,c,GA5DZ6B,IAAMC,YCaVC,G,wLAdNpC,QAAQC,IAAI2B,KAAKpC,OADF,MAEaoC,KAAKpC,MAA1B6C,EAFQ,EAERA,SAAUC,EAFF,EAEEA,aACKC,IAAnBF,EAAS/B,OACRgC,EAAQpC,KAAK,O,+BAIb,IACEmC,EAAYT,KAAKpC,MAAjB6C,SACP,OAAGA,EAAS/B,MAAY,yBAAKhB,UAAU,UAAU+C,EAAS/B,MAAME,OACpD,S,GAZC0B,IAAMC,YCWZK,G,MAVJ,WACP,OACI,yBAAKlD,UAAW,OACZ,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMa,GAAG,IAAIb,UAAU,SAAvB,QACA,kBAAC,IAAD,CAAMa,GAAG,SAASb,UAAU,SAA5B,aCSDmD,EAVJ,WACT,OACA,kBAAC,IAAD,KACM,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,SAASC,OAAO,EAAMC,UAAYvD,IAC9C,kBAAC,IAAD,CAAOqD,KAAK,IAAIC,OAAO,EAAMC,UAAY7B,IACzC,kBAAC,IAAD,CAAO2B,KAAK,oBAAoBC,OAAO,EAAMC,UAAYR,MCRjES,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f091305b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\"\r\nconst About=()=>{\r\n    return(\r\n            <div className=\"container2\">\r\n                <div className=\"value\">Hello this is About</div>\r\n            </div>\r\n            \r\n    );\r\n}\r\nexport default About;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Movie = (props) => {\r\n  let len = Object.keys(props.genres).length;\r\n  let newGenre = [];\r\n  (function a(){\r\n    for(let i = 0;i<len;i++){\r\n      console.log(props.genres[i]);\r\n      if(i!==len-1)\r\n        newGenre.push(props.genres[i]+\", \")\r\n      else\r\n      newGenre.push(props.genres[i])\r\n    }\r\n  }())\r\n\r\n  //jsx에서는 연 태그는 무조건 닫아야 한다, img태그는 <img/>혹은 <img></img>로 하면 된다\r\n  return(\r\n    <Link to ={{\r\n      pathname:`/movie-detail/${props.id}`,\r\n      state:{\r\n        year : props.year,\r\n        title : props.title,\r\n        summary : props.summary,\r\n        poster : props.img,\r\n        genres:props.genres\r\n\r\n      }\r\n    }}>\r\n          <div className =\"in_movies\">\r\n            <img src = {props.img} alt = {props.title} title={props.title}/>\r\n          <div className = \"contents\">\r\n            <h2 className = \"mov_title\">{props.title}</h2>\r\n            <h4 className = \"mov_year\">{props.year}</h4>\r\n            <div className = \"genre_Contents\">\r\n                <h5 className =\"genres\">Gerne : {newGenre}</h5>\r\n            </div>\r\n            <p className = \"mov_summary\">{props.summary.slice(0,140)}...</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n  ); \r\n};\r\nMovie.propTypes = {\r\n  id: PropTypes.number,\r\n  year: PropTypes.number,\r\n  title: PropTypes.string,\r\n  summary: PropTypes.string,\r\n  genres : PropTypes.object,\r\n  img: PropTypes.string,  \r\n  key : PropTypes.number\r\n};\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/moive\";\r\nimport \"../components/App.css\"\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n    number: 0,\r\n    \r\n  };\r\nprint=()=>{\r\n  console.log(this.genre)\r\n}\r\n  getApi = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies: mov }, //객체 구조 분해 할당으로 그 값이 배열이여도 인덱스에 있는 값을 사용할 수 없다\r\n      },\r\n    } /*es6 문법 구조 분해 할당*/ = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=download_count\"\r\n    );\r\n      console.log(mov)\r\n    this.setState((state) => {\r\n      return { movies: mov, isLoading: false};\r\n    }); //setState함수에 되도록이면 함수를 전달하자__\r\n    //위에 꺼는  this.setState(state=>({movies : mov, isLoading : false}))으로도 쓸수 있다.\r\n    //console.log(this.state.movies)\r\n  };\r\n  componentDidMount() {\r\n    const { isLoading } = this.state;\r\n    if (!isLoading)\r\n     setTimeout(() => {\r\n        //(()=>{})() ===> 즉시 실행 화살표 함수\r\n        // this.setState(current => ({isLoading:!current.isLoading}))\r\n        //or this.setState(current => {return {isLoading:!currentLoading}})\r\n        //this.setState({isLoading:!this.state.isLoading})\r\n        this.setState({ isLoading: !isLoading });\r\n      }, 6000); // or setTimeout(function(){~~})\r\n  this.getApi();\r\n  \r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies} = this.state; //es6 == 비구조화 할당\r\n    console.log(movies)\r\n    \r\n    return (\r\n        <section className=\"container\">\r\n        {isLoading\r\n          ? (<div className=\"loader\">\r\n              <span className=\"loadText\">Loading...</span>\r\n            </div>)\r\n            : \r\n          <div className =\"movies\">\r\n              {movies.map((movie) => {\r\n                return (\r\n                  <Movie\r\n                    id={movie.id}\r\n                    year={movie.year}\r\n                    title={movie.title}\r\n                    summary={movie.summary}\r\n                    img={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                    key={movie.id}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n           }\r\n        </section>\r\n    );\r\n  \r\n  }\r\n  \r\n}\r\n//{movies.map(movie=> (<Movie id={movie.id}year={movie.year} title={movie.title} summary={movie.summary}  />))} 50번째 줄은 다음과 같이 대체할 수 있음\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Detail.css\"\r\nclass Detail extends React.Component{\r\n     componentDidMount(){\r\n         console.log(this.props)\r\n         const {location ,history} = this.props;\r\n         if(location.state === undefined){\r\n             history.push(\"/\");//history.goBack();로도 사용할 수 있음 그런데 체감삼 history.push(\"/\")가 더 빠른듯 함\r\n             //=>Redirecting\r\n         }\r\n     }\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state)return<div className=\"detail\">{location.state.title}</div>\r\n        else return null;\r\n    }\r\n\r\n}\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\nconst Navi=()=>{\r\n    return (\r\n        <div className =\"nav\">\r\n            <div className=\"span\">\r\n                <Link to=\"/\" className=\"link1\">Home</Link>\r\n                <Link to=\"/about\" className=\"link2\">about</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Navi;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\"\n//<Route/> => Important Props : 1.The screen to render, 2.What to do\nconst App =()=>{\n  return( \n  <BrowserRouter>\n        <Navigation />\n        <Route path=\"/about\" exact={true} component={ About }/> \n        <Route path=\"/\" exact={true} component={ Home }/>\n        <Route path=\"/movie-detail/:id\" exact={true} component={ Detail }/>\n  </BrowserRouter>\n  )\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}